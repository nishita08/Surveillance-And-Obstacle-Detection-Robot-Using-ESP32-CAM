#include <Wire.h> 
#include <LiquidCrystal_I2C.h>
// Set the LCD address to 0x27 for  16 chars and 2 line display
LiquidCrystal_I2C lcd(0x27, 16, 2);
// Includes the Servo library
#include <Servo.h>

// Defines Tirg and Echo pins of the Ultrasonic Sensor
const int trigPin = 2;
const int echoPin = 3;
const int Buzzer=13;
// Variables for the duration and the distance
long duration;
int distance;

Servo myServo; // Creates a servo object for controlling the servo motor

void setup() 
{
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  pinMode(Buzzer,OUTPUT);
  lcd.init();  /* Initialize 16x2 LCD */
  lcd.backlight(); // Turn on the blacklight and print a message
  Serial.begin(9600);
  myServo.attach(9); // Defines on which pin is the servo motor attached
}
void loop() 
{
Display_Reading();

  // rotates the servo motor from 15 to 165 degrees
  for(int i=15;i<=165;i++){  
  myServo.write(i);
  delay(30);
  distance = calculateDistance();// Calls a function for calculating the distance measured by the Ultrasonic sensor for each degree
  if(distance>0 && distance<20)
  {digitalWrite(Buzzer,HIGH);}
  else
  {digitalWrite(Buzzer,LOW);}
  Serial.print(i); // Sends the current degree into the Serial Port
  Serial.print(","); // Sends addition character right next to the previous    value needed later in the Processing IDE for indexing
  Serial.print(distance); // Sends the distance value into the Serial Port
  Serial.print("."); // Sends addition character right next to the previous value needed later in the Processing IDE for indexing
  }

  //delay(500); //pause time
  // Repeats the previous lines from 165 to 15 degrees
  for(int i=165;i>15;i--)
{  
  myServo.write(i);
  delay(30);
  distance = calculateDistance();
  if(distance>0 && distance<20)
  {digitalWrite(Buzzer,HIGH);}
  else
  {digitalWrite(Buzzer,LOW);}
  Serial.print(i);
  Serial.print(",");
  Serial.print(distance);
  Serial.print(".");
  }
  //delay(500); //pause time
}
// Function for calculating the distance measured by the Ultrasonic sensor
int calculateDistance()
{ 
  digitalWrite(trigPin, LOW); 
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH); 
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH); // Reads the echoPin, 
  distance= duration*0.034/2;
  return distance;
}

/////////////////////////
void Display_Reading()
{
lcd.setCursor(0,0); /* Set cursor to column 0 row 0 */
lcd.print("SONAR Project"); /* Print data on display */
lcd.setCursor(0,1); /* Set cursor to column 0 row 0 */
lcd.print("Scanning...");
}
